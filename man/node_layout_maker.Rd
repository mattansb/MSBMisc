% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node_layout_maker.R
\name{node_layout_maker}
\alias{node_layout_maker}
\alias{node_layout_maker.character}
\alias{node_layout_maker.tbl_graph}
\alias{node_layout_maker.numeric}
\alias{node_layout_maker.default}
\title{Shiny app for manual Node layout}
\usage{
node_layout_maker(object, snap_to_grid = TRUE)

\method{node_layout_maker}{character}(object, snap_to_grid = TRUE)

\method{node_layout_maker}{tbl_graph}(object, snap_to_grid = TRUE)

\method{node_layout_maker}{numeric}(object, snap_to_grid = TRUE)

\method{node_layout_maker}{default}(object, snap_to_grid = TRUE)
}
\arguments{
\item{object}{Object to get the node names from.
Can be a character vector, a number representing the number of nodes,
a \code{\link[tidygraph]{tbl_graph}} (node names will be taken from the first char column)
or an object supported by \code{\link[semPlot]{semPlotModel}}.}

\item{snap_to_grid}{Should nodes be auto snapped to the grid?}
}
\value{
A matrix with a row per node, and column representing x and y. This matrix can be passed as-is to \code{\link[semPlot]{semPaths}} via \code{layout=}.
}
\description{
Shiny app for manual Node layout
}
\examples{
\dontrun{
  library(lavaan)
  library(semPlot)

  mediation_model <- "
    Sepal.Length ~ b * Sepal.Width + c * Petal.Length
     Sepal.Width ~ a * Petal.Length
  "
  fit <- sem(mediation_model, data = iris)

  semPaths(fit)


  # With user layout
  m <- node_layout_maker(fit, snap_to_grid = TRUE)

  semPaths(fit, layout = m)
}

\dontrun{
  library(tidygraph)
  library(ggraph)

  rstat_nodes <- data.frame(person = c("Hadley", "David", "Romain", "Julia"))
  rstat_edges <- data.frame(from = c(1, 1, 1, 2, 3, 3, 4, 4, 4),
                            to = c(2, 3, 4, 1, 1, 2, 1, 2, 3))
  graph_data <- tbl_graph(nodes = rstat_nodes, edges = rstat_edges)

  m_layout <- node_layout_maker(graph_data)

  ggraph(graph_data, layout = m_layout) +
    geom_node_label(aes(label = person))
}
}
